name: Electron CD Windows x64

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-2022
    strategy:
      matrix:
        node-version: [20.11]
        python-version: [3.7]
        arch: [64]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pypiwin32
        env:
        # env for windows to install pycrypto; MSVC version may change
          CL: /FI"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.24.28314\\INCLUDE\\stdint.h"
      - name: Setup msvs_version config
        run: |
          npm config set msvs_version 2019
          npm config get msvs_version

      - name: Checkout Beamify
        uses: actions/checkout@v3
        with:
          repository: flux3dp/beamify
          ref: 2.0.2
          token: ${{ secrets.REPO_TOKEN }}
          path: .github/actions/beamify

      - name: Install Beamify
        uses: ./.github/actions/beamify

      - name: Install Fluxsvg
        uses: flux3dp/fluxsvg@2.7.5

      - name: Checkout FluxClient
        uses: actions/checkout@v3
        with:
          repository: flux3dp/fluxclient-dev
          ref: 2.6.2
          token: ${{ secrets.REPO_TOKEN }}
          path: .github/actions/fluxclient

      - name: Install FluxClient
        uses: ./.github/actions/fluxclient

      - name: Build Flux Api
        uses: flux3dp/fluxghost@2.1.2
        env:
          LC_ALL: en_US.UTF-8
          LC_CTYPE: en_US.UTF-8
          WIN_ARCH: x64

      - name: Checkout Beam Studio Core
        uses: actions/checkout@v3
        with:
          repository: flux3dp/beam-studio-core
          token: ${{ secrets.REPO_TOKEN }}
          path: .github/actions/beam-studio-core
          ref: 2.3.4

      - name: Copy Beam Studio Core
        run: |
          Remove-Item ./src/web
          Remove-Item ./public/js/lib
          cp -R .github/actions/beam-studio-core/src/web ./src/
          cp -R .github/actions/beam-studio-core/public/js/lib ./public/js/

      - name: Build Beam Studio
        shell: bash
        run: |
          mkdir backend
          yarn install --network-timeout 100000
          yarn build

          cp -R $TMP/flux_api_swap backend/flux_api
          cp -R lib/monitorexe-win64 backend/monitorexe-win64
          cp -R lib/elevate.cmd backend/elevate.cmd
          cp -R lib/elevate.vbs backend/elevate.vbs
          ./backend/flux_api/flux_api --test --without_pcl

          cp -R util/win64 utils
          cp ./ihatewindowsCodeSign.js ./node_modules/app-builder-lib/out/codeSign/windowsCodeSign.js

          bash ./build/clearup-develop-files.sh

          echo 64
          yarn dist --win --x64 --publish always
        env:
          PUBLISH_BUCKET: beamstudio
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PUBLISH_PATH: -x${{ matrix.arch }}
          CERT_THUMBPRINT: ${{ secrets.CERT_THUMBPRINT }}
          CERT_SUBJECT: ${{ secrets.CERT_SUBJECT }}
          WIN_CODESIGN_SERVER: ${{ secrets.WIN_CODESIGN_SERVER }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      # - name: Cleanup artifacts
      #   run: |
      #     mkdir artifacts
      #     mv dist/*.exe artifacts

      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: win-x${{ matrix.arch }}
      #     path: artifacts
