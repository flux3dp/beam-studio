name: Electron CD Windows

on:
  push:
    tags:
      '*'

jobs:
  build:

    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [10.6]
        python-version: [3.7]
        arch: [32, 64]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pypiwin32
        env: 
        # env for windows to install pycrypto; MSVC version may change
          CL: /FI"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.24.28314\\INCLUDE\\stdint.h"
      - name: Setup vs2015
        run: |
          npm install --global --production --vs2015 windows-build-tools
          npm config set msvs_version 2015
          npm config get msvs_version
      # using https://github.com/InVisionApp/private-action-loader for private repo.
      - name: Install Beamify
        uses: invisionapp/private-action-loader@v3
        with:
          pal-repo-token: ${{ secrets.REPO_TOKEN }}
          pal-repo-name: flux3dp/beamify@master

      - name: Install Fluxsvg
        uses: flux3dp/fluxsvg@master

      - name: Install FluxClient
        uses: invisionapp/private-action-loader@v3
        with:
          pal-repo-token: ${{ secrets.REPO_TOKEN }}
          pal-repo-name: flux3dp/fluxclient-dev@develop

      - name: Build Flux Api
        uses: flux3dp/fluxghost@develop
        env:
          LC_ALL: en_US.UTF-8
          LC_CTYPE: en_US.UTF-8

      - name: Build Beam Studio
        run: |
          mkdir backend

          yarn install

          gulp sass
          gulp jsx

          cd ./node_modules/text-to-svg
          npm install --save-dev
          gulp build
          cd ../../
          $env:TMP
          cp -R $env:TMP/flux_api_swap backend/flux_api
          ./backend/flux_api/flux_api --test --without_pcl 

          cp -Force ./ihatewindowsCodeSign.js ./node_modules/app-builder-lib/out/codeSign/windowsCodeSign.js

          if (${{ matrix.arch }} -eq 64) {
            echo 64
            yarn dist --win --x64 --publish always
          }
          else {
            echo 32
            $env:PUBLISH_PATH = "-x86"
            yarn dist --win --ia32 --publish always
          }
        env:
          PUBLISH_BUCKET: beamstudio
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PUBLISH_PATH: -x${{ matrix.arch }}
          CERT_THUMBPRINT: ${{ secrets.CERT_THUMBPRINT }}
          CERT_SUBJECT: ${{ secrets.CERT_SUBJECT }}
          WIN_CODESIGN_SERVER: ${{ secrets.WIN_CODESIGN_SERVER }}
      
      - name: Cleanup artifacts
        run: |
          mkdir artifacts
          mv dist/*.exe artifacts

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: win-x${{ matrix.arch }}
          path: artifacts