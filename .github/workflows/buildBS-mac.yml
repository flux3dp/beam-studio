name: Electron CD Mac

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [10.6]
        os: [macOS-latest]

    steps:
      - uses: actions/checkout@v2
      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v1
      #   with:
      #     python-version: ${{ matrix.python-version }}
      - name: Setup Python
        run: |
          curl -O "https://www.python.org/ftp/python/3.6.8/python-3.6.8-macosx10.9.pkg"
          sudo installer -pkg ./python-3.6.8-macosx10.9.pkg -target /
          echo "::add-path::/Library/Frameworks/Python.framework/Versions/3.6/bin"

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Python dependencies
        run: |
          python3 --version
          python3 -m pip install --upgrade pip
          pip3 install -r requirements-mac.txt
        env:
          MACOSX_DEPLOYMENT_TARGET: "10.10"
          
      - name: Install Cairo
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
          brew install cairo

      # using https://github.com/InVisionApp/private-action-loader for private repo.
      - name: Install Beamify
        uses: invisionapp/private-action-loader@v3
        with:
          pal-repo-token: ${{ secrets.REPO_TOKEN }}
          pal-repo-name: flux3dp/beamify@master
        env:
          MACOSX_DEPLOYMENT_TARGET: "10.10"

      - name: Install Fluxsvg
        uses: flux3dp/fluxsvg@master

      - name: Install FluxClient
        uses: invisionapp/private-action-loader@v3
        with:
          pal-repo-token: ${{ secrets.REPO_TOKEN }}
          pal-repo-name: flux3dp/fluxclient-dev@develop
        env:
          MACOSX_DEPLOYMENT_TARGET: "10.10"

      - name: Build Flux Api
        uses: flux3dp/fluxghost@develop
        env:
          LC_ALL: en_US.UTF-8
          LC_CTYPE: en_US.UTF-8
          MACOSX_DEPLOYMENT_TARGET: "10.10"

      - name: Create Apple Certs
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}

      - name: Build Beam Studio
        run: |
          mkdir backend
          npm install --global gulp-cli

          yarn install
          gulp sass
          gulp jsx

          cd ./node_modules/text-to-svg
          npm install --save-dev
          gulp build
          cd ../../

          cp -R $HOME/flux_api_swap backend/flux_api
          cp -R lib/monitorexe-osx backend/monitorexe-osx
          ./backend/flux_api/flux_api --test --without_pcl

          cp -R util/mac utils


          echo "Signing *.so files..."
          find ./backend -name "*.so" | while read f ; do
          codesign --force --verbose -s "Developer ID Application: FLUX TECHNOLOGY CORP. (4Y92JWKV94)" $f; done

          chmod -R 777 node_modules/font-manager

          yarn dist --publish always
        env:
          PUBLISH_BUCKET: beamstudio
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PUBLISH_PATH: ""
          APPLEID: ${{ secrets.APPLEID_DEAN }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS_DEAN }}

      - name: Cleanup artifacts
        run: |
          mkdir artifacts
          mv dist/*.dmg artifacts

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{matrix.os}}
          path: artifacts