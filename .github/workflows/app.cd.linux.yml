name: app cd linux

on:
  push:
    tags:
      - "app-*"
  workflow_dispatch:
    inputs:
      publish_suffix:
        description: "Publish Suffix"
        required: false
        default: ""
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [22]
        python-version: [3.8]
        os: [ubuntu-22.04]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install Python dependencies
        run: |
          sudo apt-get install -y python3-setuptools
          python3 -m pip install --upgrade pip
          pip3 install -r ./apps/app/requirements.txt

      - name: Checkout Beamify
        uses: actions/checkout@v4
        with:
          repository: flux3dp/beamify
          ref: 2.0.8
          token: ${{ secrets.REPO_TOKEN }}
          path: ./apps/app/.github/actions/beamify

      - name: Install Beamify
        uses: ./apps/app/.github/actions/beamify

      - name: Install Fluxsvg
        uses: flux3dp/fluxsvg@2.7.7

      - name: Checkout FluxClient
        uses: actions/checkout@v4
        with:
          repository: flux3dp/fluxclient-dev
          ref: 2.9.8
          token: ${{ secrets.REPO_TOKEN }}
          path: ./apps/app/.github/actions/fluxclient

      - name: Install FluxClient
        uses: ./apps/app/.github/actions/fluxclient

      - name: Build Flux Ghost
        uses: flux3dp/fluxghost@2.5.1
        env:
          LC_ALL: en_US.UTF-8
          LC_CTYPE: en_US.UTF-8

      - name: Build Beam Studio
        run: |
          pnpm -r install --filter="." --filter="app" --filter="core"
          pnpm nx run app:build

      - name: Sign and Publish
        run: |
          # Copy dynamic linked libraries to the app, workaround for https://github.com/electron-userland/electron-builder/issues/9025
          rm -rf ./apps/app/public/js/lib
          cp -R ./packages/core/public/js/lib ./apps/app/public/js

          cd ./apps/app
          mkdir ./backend

          cp -R $HOME/flux_api_swap ./backend/flux_api
          ./backend/flux_api/flux_api --test

          sudo bash ./build/clearup-develop-files.sh

          if [ ${{ matrix.os }} = "ubuntu-20.04" ]
          then
            export PUBLISH_PATH="-20.04"
          elif [ ${{ matrix.os }} = "ubuntu-22.04" ]
          then
            export PUBLISH_PATH="-22.04"
          else
            export PUBLISH_PATH="-24.04"
          fi
          echo $PUBLISH_PATH

          pnpm nx run app:dist --publish always
        env:
          PUBLISH_BUCKET: beamstudio
          PUBLISH_SUFFIX: ${{ github.event.inputs.publish_suffix || '' }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
