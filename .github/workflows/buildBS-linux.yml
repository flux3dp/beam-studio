name: Electron CD Linux

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [20.11]
        python-version: [3.7]
        os: [ubuntu-20.04, ubuntu-22.04]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install -y python3-setuptools

      - name: Checkout Beamify
        uses: actions/checkout@v3
        with:
          repository: flux3dp/beamify
          ref: 2.0.2
          token: ${{ secrets.REPO_TOKEN }}
          path: .github/actions/beamify

      - name: Install Beamify
        uses: ./.github/actions/beamify

      - name: Install Fluxsvg
        uses: flux3dp/fluxsvg@2.7.5

      - name: Checkout FluxClient
        uses: actions/checkout@v3
        with:
          repository: flux3dp/fluxclient-dev
          ref: 2.6.0
          token: ${{ secrets.REPO_TOKEN }}
          path: .github/actions/fluxclient

      - name: Install FluxClient
        uses: ./.github/actions/fluxclient

      - name: Build Flux Api
        uses: flux3dp/fluxghost@2.1.2
        env:
          LC_ALL: en_US.UTF-8
          LC_CTYPE: en_US.UTF-8

      - name: Checkout Beam Studio Core
        uses: actions/checkout@v3
        with:
          repository: flux3dp/beam-studio-core
          token: ${{ secrets.REPO_TOKEN }}
          path: .github/actions/beam-studio-core
          ref: develop

      - name: Copy Beam Studio Core
        run: |
          cp -R .github/actions/beam-studio-core ../beam-studio-core

      - name: Build Beam Studio
        run: |
          echo $PUBLISH_PATH
          mkdir backend

          yarn install
          webpack

          cp -R $HOME/flux_api_swap backend/flux_api
          ./backend/flux_api/flux_api --test --without_pcl

          sudo bash ./build/clearup-develop-files.sh

          if [ ${{ matrix.os }} = "ubuntu-18.04" ]
          then
            export PUBLISH_PATH="-18.04"
          elif [ ${{ matrix.os }} = "ubuntu-20.04" ]
          then
            export PUBLISH_PATH="-20.04"
          else
            export PUBLISH_PATH="-22.04"
          fi
          echo $PUBLISH_PATH

          yarn dist --publish always
        env:
          PUBLISH_BUCKET: beamstudio
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Cleanup artifacts
      #   run: |
      #     mkdir artifacts
      #     mv dist/*.deb artifacts

      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: ${{matrix.os}}
      #     path: artifacts
