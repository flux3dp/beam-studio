name: Electron CD Linux

on:
  push:
    tags:
      '*'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [10.6]
        python-version: [3.7]
        os: [ubuntu-16.04, ubuntu-18.04]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get install -y python3-setuptools
      - name: Setup gcc
        if: matrix.os == 'ubuntu-16.04'
        run: |
          sudo apt-get update
          sudo apt-get install gcc-7
          sudo apt-get install g++-7
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 70 --slave /usr/bin/g++ g++ /usr/bin/g++-7
          gcc -v
          g++ -v
      # using https://github.com/InVisionApp/private-action-loader for private repo.
      - name: Install Beamify
        uses: invisionapp/private-action-loader@v3
        with:
          pal-repo-token: ${{ secrets.REPO_TOKEN }}
          pal-repo-name: flux3dp/beamify@master

      - name: Install Fluxsvg
        uses: flux3dp/fluxsvg@master

      - name: Install FluxClient
        uses: invisionapp/private-action-loader@v3
        with:
          pal-repo-token: ${{ secrets.REPO_TOKEN }}
          pal-repo-name: flux3dp/fluxclient-dev@develop

      - name: Build Flux Api
        uses: flux3dp/fluxghost@develop
        env:
          LC_ALL: en_US.UTF-8
          LC_CTYPE: en_US.UTF-8

      - name: Build Beam Studio
        run: |
          echo $PUBLISH_PATH
          mkdir backend
          npm install --global gulp-cli

          yarn install
          gulp sass
          gulp jsx

          cd ./node_modules/text-to-svg
          npm install --save-dev
          gulp build
          cd ../../

          cp -R $HOME/flux_api_swap backend/flux_api
          ./backend/flux_api/flux_api --test --without_pcl 

          rm -rf util
          rm -rf lib

          if [ ${{ matrix.os }} = "ubuntu-16.04" ]
          then
            export PUBLISH_PATH=""
          else
            export PUBLISH_PATH="-18.04"
          fi
          echo $PUBLISH_PATH

          yarn dist --publish always
        env:
          PUBLISH_BUCKET: beamstudio
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PUBLISH_PATH: ${{ matrix.os }}
            

      - name: Cleanup artifacts
        run: |
          mkdir artifacts
          mv dist/*.deb artifacts

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{matrix.os}}
          path: artifacts
