export interface ILang {
  global: Record<'cancel' | 'back' | 'save' | 'apply' | 'ok' | 'stop', string> & {
    editing: Record<'undo' | 'redo' | 'zoom_in' | 'zoom_out' | 'reset', string>;
  };
  general: {
    processing: string;
    choose_folder: string;
  };
  buttons: {
    next: string;
    back: string;
    done: string;
    back_to_beam_studio: string;
  };
  topbar: {
    untitled: string;
    rename_tab: string;
    titles: {
      settings: string;
    };
    preview: string;
    preview_title: string;
    preview_press_esc_to_stop: string;
    curve_engrave: string;
    task_preview: string;
    frame_task: string;
    borderless: string;
    tag_names: {
      rect: string;
      ellipse: string;
      path: string;
      polygon: string;
      image: string;
      text: string;
      text_path: string;
      pass_through_object: string;
      line: string;
      g: string;
      multi_select: string;
      use: string;
      svg: string;
      dxf: string;
      no_selection: string;
    };
    alerts: {
      start_preview_timeout: string;
      fail_to_start_preview: string;
      fail_to_connect_with_camera: string;
      add_content_first: string;
      headtype_mismatch: string;
      headtype_none: string;
      headtype_unknown: string;
      install_correct_headtype: string;
      door_opened: string;
      fail_to_get_door_status: string;
      QcleanScene: string;
      power_too_high: string;
      power_too_high_msg: string;
      power_too_high_confirm: string;
      pwm_unavailable: string;
      job_origin_unavailable: string;
      job_origin_warning: string;
    };
    hint: {
      polygon: string;
    };
    menu: {
      preferences: string;
      hide: string;
      hideothers: string;
      service: string;
      quit: string;
      window: string;
      minimize: string;
      close: string;
      file: string;
      edit: string;
      help: string;
      open: string;
      samples: string;
      example_files: string;
      material_test: string;
      promark_color_test: string;
      calibration: string;
      import_hello_beamo: string;
      import_hello_beambox: string;
      import_beambox_2_example: string;
      import_material_testing_old: string;
      import_material_testing_simple_cut: string;
      import_material_testing_cut: string;
      import_material_testing_engrave: string;
      import_material_testing_line: string;
      import_material_printing_test: string;
      import_ador_laser_example: string;
      import_ador_printing_example_single: string;
      import_ador_printing_example_full: string;
      import_acrylic_focus_probe: string;
      import_beambox_2_focus_probe: string;
      import_promark_example: string;
      import_hexa_example: string;
      import_promark_mopa_20w_color: string;
      import_promark_mopa_60w_color: string;
      import_promark_mopa_100w_color: string;
      export_to: string;
      export_flux_task: string;
      export_BVG: string;
      export_SVG: string;
      export_PNG: string;
      export_JPG: string;
      save_scene: string;
      save_as: string;
      save_to_cloud: string;
      about_beam_studio: string;
      undo: string;
      redo: string;
      cut: string;
      copy: string;
      paste: string;
      paste_in_place: string;
      group: string;
      ungroup: string;
      delete: string;
      duplicate: string;
      offset: string;
      scale: string;
      rotate: string;
      reset: string;
      align_center: string;
      photo_edit: string;
      svg_edit: string;
      path: string;
      decompose_path: string;
      object: string;
      layer_setting: string;
      layer_color_config: string;
      image_sharpen: string;
      image_crop: string;
      image_invert: string;
      image_stamp: string;
      image_vectorize: string;
      image_curve: string;
      align_to_edges: string;
      document_setting: string;
      document_setting_short: string;
      rotary_setup: string;
      clear_scene: string;
      machines: string;
      add_new_machine: string;
      help_center: string;
      show_gesture_tutorial: string;
      show_start_tutorial: string;
      show_ui_intro: string;
      questionnaire: string;
      change_logs: string;
      contact: string;
      tutorial: string;
      design_market: string;
      forum: string;
      software_update: string;
      bug_report: string;
      dashboard: string;
      machine_info: string;
      network_testing: string;
      commands: string;
      update_firmware: string;
      using_beam_studio_api: string;
      set_as_default: string;
      calibrate_beambox_camera: string;
      calibrate_printer_module: string;
      calibrate_ir_module: string;
      calibrate_beambox_camera_borderless: string;
      calibrate_diode_module: string;
      calibrate_camera_advanced: string;
      manage_account: string;
      sign_in: string;
      sign_out: string;
      account: string;
      my_account: string;
      download_log: string;
      download_log_canceled: string;
      download_log_error: string;
      keyboard_shortcuts: string;
      log: {
        network: string;
        hardware: string;
        discover: string;
        usb: string;
        usblist: string;
        camera: string;
        cloud: string;
        player: string;
        robot: string;
      };
      link: {
        help_center: string;
        contact_us: string;
        forum: string;
        downloads: string;
        beam_studio_api: string;
        design_market: string;
        shortcuts: string;
      };
      view: string;
      zoom_in: string;
      zoom_out: string;
      fit_to_window: string;
      zoom_with_window: string;
      borderless_mode: string;
      show_grids: string;
      show_rulers: string;
      show_layer_color: string;
      anti_aliasing: string;
      disassemble_use: string;
      about: string;
      switch_to_beta: string;
      switch_to_latest: string;
      reload_app: string;
      recent: string;
      update: string;
      dev_tool: string;
      camera_calibration_data: string;
      upload_data: string;
      download_data: string;
      tools: {
        title: string;
        material_test_generator: string;
        code_generator: string;
        box_generator: string;
      };
      follow_us: string;
    };
    select_machine: string;
  };
  support: {
    no_webgl: string;
    no_vcredist: string;
  };
  generic_error: {
    UNKNOWN_ERROR: string;
    OPERATION_ERROR: string;
    SUBSYSTEM_ERROR: string;
    UNKNOWN_COMMAND: string;
  };
  device_selection: {
    no_beambox: string;
    no_device_web: string;
    select_usb_device: string;
  };
  update: {
    update: string;
    release_note: string;
    firmware: {
      caption: string;
      message_pattern_1: string;
      message_pattern_2: string;
      latest_firmware: {
        caption: string;
        message: string;
        still_update: string;
        cant_get_latest: string;
      };
      confirm: string;
      upload_file: string;
      update_success: string;
      update_fail: string;
      too_old_for_web: string;
      force_update_message: string;
      firmware_too_old_update_by_sdcard: string;
    };
    software: {
      checking: string;
      switch_version: string;
      check_update: string;
      caption: string;
      downloading: string;
      install_or_not: string;
      switch_or_not: string;
      available_update: string;
      available_switch: string;
      not_found: string;
      no_response: string;
      switch_version_not_found: string;
      yes: string;
      no: string;
      update_for_ador: string;
    };
    updating: string;
    skip: string;
    preparing: string;
    later: string;
    download: string;
    cannot_reach_internet: string;
    install: string;
    upload: string;
  };
  topmenu: {
    version: string;
    credit: string;
    ok: string;
    file: {
      label: string;
      import: string;
      save_fcode: string;
      save_scene: string;
      save_svg: string;
      save_png: string;
      save_jpg: string;
      converting: string;
      all_files: string;
      svg_files: string;
      png_files: string;
      jpg_files: string;
      scene_files: string;
      fcode_files: string;
      clear_recent: string;
      path_not_exit: string;
    };
    device: {
      download_log_canceled: string;
      download_log_error: string;
      log: {
        usblist: string;
      };
      network_test: string;
    };
  };
  initialize: {
    // generic strings
    next: string;
    start: string;
    skip: string;
    cancel: string;
    confirm: string;
    connect: string;
    back: string;
    retry: string;
    no_machine: string;

    // specific caption/content
    select_language: string;
    select_machine_type: string;
    select_beambox: string;
    select_connection_type: string;
    connection_types: {
      wifi: string;
      wired: string;
      ether2ether: string;
      usb: string;
    };
    connect_wifi: {
      title: string;
      tutorial1: string;
      tutorial1_ador: string;
      tutorial2: string;
      what_if_1: string;
      what_if_1_content: string;
      what_if_2: string;
      what_if_2_content: string;
    };
    connect_wired: {
      title: string;
      tutorial1: string;
      tutorial2: string;
      tutorial2_ador: string;
      what_if_1: string;
      what_if_1_content: string;
      what_if_2: string;
      what_if_2_content: string;
    };
    connect_ethernet: {
      title: string;
      tutorial1: string;
      tutorial2_1: string;
      tutorial2_a_text: string;
      tutorial2_a_href_mac: string;
      tutorial2_a_href_win: string;
      tutorial2_2: string;
      tutorial3: string;
    };
    connect_usb: {
      title: string;
      title_sub: string;
      tutorial1: string;
      tutorial2: string;
      turn_off_machine: string;
      turn_on_machine: string;
      wait_for_turning_on: string;
      connect_camera: string;
    };
    connect_machine_ip: {
      check_usb: string;
      enter_ip: string;
      check_ip: string;
      invalid_ip: string;
      invalid_format: string;
      starts_with_169254: string;
      unreachable: string;
      check_connection: string;
      check_firmware: string;
      check_camera: string;
      retry: string;
      succeeded_message: string;
      finish_setting: string;
      check_swiftray_connection: string;
      check_swiftray_connection_unreachable: string;
      promark_hint: string;
      alert: {
        swiftray_connection_error: string;
      };
    };
    connecting: string;
    setting_completed: {
      start: string;
      great: string;
      setup_later: string;
      back: string;
      ok: string;
    };
    promark: {
      select_laser_source: string;
      select_workarea: string;
      settings: string;
      qc_instructions: string;
      configuration_confirmation: string;
      or_complete_later: string;
    };
  };
  error_pages: {
    screen_size: string;
  };
  menu: {
    mm: string;
    inches: string;
  };
  settings: {
    on: string;
    off: string;
    low: string;
    normal: string;
    high: string;
    caption: string;
    tabs: {
      general: string;
      device: string;
    };
    ip: string;
    guess_poke: string;
    auto_connect: string;
    wrong_ip_format: string;
    default_machine: string;
    default_machine_button: string;
    remove_default_machine_button: string;
    confirm_remove_default: string;
    reset: string;
    reset_now: string;
    confirm_reset: string;
    language: string;
    notifications: string;
    check_updates: string;
    autosave_enabled: string;
    autosave_path: string;
    autosave_interval: string;
    autosave_number: string;
    autosave_path_not_correct: string;
    preview_movement_speed: string;
    medium: string;
    default_units: string;
    default_font_family: string;
    default_font_style: string;
    fast_gradient: string;
    engraving_direction: string;
    top_down: string;
    bottom_up: string;
    vector_speed_constraint: string;
    loop_compensation: string;
    blade_radius: string;
    blade_precut_switch: string;
    blade_precut_position: string;
    default_beambox_model: string;
    guides_origin: string;
    guides: string;
    image_downsampling: string;
    anti_aliasing: string;
    continuous_drawing: string;
    trace_output: string;
    single_object: string;
    grouped_objects: string;
    simplify_clipper_path: string;
    enable_low_speed: string;
    auto_switch_tab: string;
    enable_custom_backlash: string;
    calculation_optimization: string;
    custom_preview_height: string;
    keep_preview_result: string;
    mask: string;
    text_path_calc_optimization: string;
    font_substitute: string;
    font_convert: string;
    default_borderless_mode: string;
    default_enable_autofocus_module: string;
    default_enable_diode_module: string;
    diode_offset: string;
    autofocus_offset: string;
    diode_one_way_engraving: string;
    diode_two_way_warning: string;
    share_with_flux: string;
    none: string;
    close: string;
    enabled: string;
    disabled: string;
    cancel: string;
    done: string;
    module_offset_10w: string;
    module_offset_20w: string;
    module_offset_printer: string;
    module_offset_2w_ir: string;
    printer_advanced_mode: string;
    default_laser_module: string;
    low_laser_for_preview: string;
    groups: {
      general: string;
      update: string;
      connection: string;
      autosave: string;
      camera: string;
      editor: string;
      engraving: string;
      path: string;
      mask: string;
      text_to_path: string;
      modules: string;
      ador_modules: string;
      privacy: string;
    };
    notification_on: string;
    notification_off: string;
    update_latest: string;
    update_beta: string;
    help_center_urls: {
      connection: string;
      image_downsampling: string;
      anti_aliasing: string;
      continuous_drawing: string;
      simplify_clipper_path: string;
      fast_gradient: string;
      reverse_engraving: string;
      vector_speed_constraint: string;
      loop_compensation: string;
      mask: string;
      font_substitute: string;
      font_convert: string;
      default_borderless_mode: string;
      default_enable_autofocus_module: string;
      default_enable_diode_module: string;
      calculation_optimization: string;
    };
  };
  beambox: {
    tag: {
      g: string;
      use: string;
      image: string;
      text: string;
    };
    context_menu: {
      cut: string;
      copy: string;
      paste: string;
      paste_in_place: string;
      duplicate: string;
      delete: string;
      group: string;
      ungroup: string;
      move_front: string;
      move_up: string;
      move_down: string;
      move_back: string;
    };
    popup: {
      select_import_method: string;
      select_import_module: string;
      touchpad: string;
      mouse: string;
      layer_by_layer: string;
      layer_by_color: string;
      nolayer: string;
      loading_image: string;
      no_support_text: string;
      speed_too_high_lower_the_quality: string;
      both_power_and_speed_too_high: string;
      too_fast_for_path: string;
      too_fast_for_path_and_constrain: string;
      should_update_firmware_to_continue: string;
      recommend_downgrade_software: string;
      recommend_upgrade_firmware: string;
      still_continue: string;
      more_than_two_object: string;
      not_support_object_type: string;
      select_first: string;
      select_at_least_two: string;
      import_file_contain_invalid_path: string;
      import_file_error_ask_for_upload: string;
      upload_file_too_large: string;
      successfully_uploaded: string;
      upload_failed: string;
      or_turn_off_borderless_mode: string;
      svg_1_1_waring: string;
      svg_image_path_waring: string;
      dxf_version_waring: string;
      dont_show_again: string;
      convert_to_path_fail: string;
      save_unsave_changed: string;
      dxf_bounding_box_size_over: string;
      progress: {
        uploading: string;
        calculating: string;
      };
      backend_connect_failed_ask_to_upload: string;
      backend_error_hint: string;
      pdf2svg: {
        error_when_converting_pdf: string;
        error_pdf2svg_not_found: string;
      };
      ungroup_use: string;
      vectorize_shading_image: string;
      change_workarea_before_preview: string;
      bug_report: string;
      sentry: {
        title: string;
        message: string;
      };
      questionnaire: {
        caption: string;
        message: string;
        unable_to_get_url: string;
        no_questionnaire_available: string;
      };
      facebook_group_invitation: {
        title: string;
        message: string;
        join_now: string;
        later: string;
        already_joined: string;
        dont_show_again: string;
      };
      ai_credit: {
        relogin_to_use: string;
        insufficient_credit: string;
        insufficient_credit_msg: string;
        buy_link: string;
        go: string;
      };
      text_to_path: {
        caption: string;
        message: string;
      };
      auto_switch_tab: {
        title: string;
        message: string;
      };
    };
    zoom_block: {
      fit_to_window: string;
    };
    time_est_button: {
      calculate: string;
      estimate_time: string;
    };
    left_panel: {
      unpreviewable_area: string;
      diode_blind_area: string;
      borderless_blind_area: string;
      borderless_preview: string;
      rectangle: string;
      ellipse: string;
      line: string;
      image: string;
      text: string;
      label: {
        cursor: string;
        photo: string;
        text: string;
        line: string;
        rect: string;
        oval: string;
        polygon: string;
        pen: string;
        shapes: string;
        array: string;
        preview: string;
        trace: string;
        end_preview: string;
        clear_preview: string;
        choose_camera: string;
        live_feed: string;
        adjust_height: string;
        qr_code: string;
        boxgen: string;
        my_cloud: string;
        pass_through: string;
        curve_engraving: {
          title: string;
          exit: string;
          select_area: string;
          preview_3d_curve: string;
          clear_area: string;
        };
      };
    };
    right_panel: {
      tabs: {
        layers: string;
        objects: string;
        path_edit: string;
      };
      layer_panel: {
        layer1: string;
        layer_bitmap: string;
        layer_engraving: string;
        layer_cutting: string;
        current_layer: string;
        move_elems_to: string;
        notification: {
          dupeLayerName: string;
          newName: string;
          enterUniqueLayerName: string;
          enterNewLayerName: string;
          layerHasThatName: string;
          QmoveElemsToLayer: string;
          moveElemFromPrintingLayerTitle: string;
          moveElemFromPrintingLayerMsg: string;
          moveElemToPrintingLayerTitle: string;
          moveElemToPrintingLayerMsg: string;
          splitColorTitle: string;
          splitColorMsg: string;
          mergeLaserLayerToPrintingLayerTitle: string;
          mergeLaserLayerToPrintingLayerMsg: string;
          mergePrintingLayerToLaserLayerTitle: string;
          mergePrintingLayerToLaserLayerMsg: string;
        };
        layers: {
          layer: string;
          layers: string;
          del: string;
          move_down: string;
          new: string;
          rename: string;
          move_up: string;
          dupe: string;
          lock: string;
          unlock: string;
          merge_down: string;
          merge_all: string;
          merge_selected: string;
          move_elems_to: string;
          move_selected: string;
          switchToFullColor: string;
          switchToSingleColor: string;
          splitFullColor: string;
          fullColor: string;
        };
      };
      laser_panel: {
        preset_setting: string;
        multi_layer: string;
        parameters: string;
        strength: string;
        pwm_advanced_setting: string;
        pwm_advanced_desc: string;
        pwm_advanced_hint: string;
        low_power_warning: string;
        speed: string;
        speed_contrain_warning: string;
        low_speed_warning: string;
        promark_speed_desc: string;
        repeat: string;
        advanced: string;
        lower_focus: string;
        by: string;
        stepwise_focusing: string;
        single_color: string;
        lower_focus_desc: string;
        stepwise_focusing_desc: string;
        single_color_desc: string;
        focus_adjustment: string;
        height: string;
        z_step: string;
        diode: string;
        backlash: string;
        ink_saturation: string;
        print_multipass: string;
        white_ink: string;
        white_ink_settings: string;
        color_adjustment: string;
        color_adjustment_short: string;
        halftone: string;
        halftone_link: string;
        color_strength: string;
        times: string;
        cut: string;
        engrave: string;
        more: string;
        custom_preset: string;
        various_preset: string;
        module: string;
        pulse_width: string;
        frequency: string;
        fill_setting: string;
        fill_interval: string;
        fill_angle: string;
        bi_directional: string;
        cross_hatch: string;
        dottingTime: string;
        gradient_only: string;
        filled_path_only: string;
        slider: {
          regular: string;
          low: string;
          very_low: string;
          high: string;
          very_high: string;
          slow: string;
          very_slow: string;
          fast: string;
          very_fast: string;
        };
        dropdown: {
          parameters: string;
          save: string;
          mm: {
            wood_3mm_cutting: string;
            wood_5mm_cutting: string;
            wood_7mm_cutting: string;
            wood_8mm_cutting: string;
            wood_10mm_cutting: string;
            wood_engraving: string;
            acrylic_3mm_cutting: string;
            acrylic_5mm_cutting: string;
            acrylic_8mm_cutting: string;
            acrylic_10mm_cutting: string;
            acrylic_engraving: string;
            mdf_3mm_cutting: string;
            mdf_5mm_cutting: string;
            mdf_engraving: string;
            leather_3mm_cutting: string;
            leather_5mm_cutting: string;
            leather_engraving: string;
            denim_1mm_cutting: string;
            fabric_3mm_cutting: string;
            fabric_5mm_cutting: string;
            fabric_engraving: string;
            rubber_bw_engraving: string;
            glass_bw_engraving: string;
            metal_bw_engraving: string;
            steel_engraving_spray_engraving: string;
            stainless_steel_bw_engraving_diode: string;
            gold_engraving: string;
            brass_engraving: string;
            ti_engraving: string;
            stainless_steel_engraving;
            aluminum_engraving: string;
            black_acrylic_3mm_cutting: string;
            black_acrylic_5mm_cutting: string;
            black_acrylic_engraving: string;
            abs_engraving: string;
            silver_engraving: string;
            iron_engraving: string;
            fabric_printing: string;
            canvas_printing: string;
            cardstock_printing: string;
            wood_printing: string;
            bamboo_printing: string;
            cork_printing: string;
            flat_stone_printing: string;
            acrylic_printing: string;
            pc_printing: string;
            stainless_steel_printing: string;
            gloss_leather_printing: string;
            glass_printing: string;
            aluminum_light: string;
            stainless_steel_dark: string;
            stainless_steel_light: string;
            brass_dark: string;
            brass_light: string;
            copper: string;
            titanium_dark: string;
            titanium_light: string;
            black_abs: string;
            white_abs: string;
            opaque_acrylic: string;
            stone: string;
          };
          inches: {
            wood_3mm_cutting: string;
            wood_5mm_cutting: string;
            wood_7mm_cutting: string;
            wood_8mm_cutting: string;
            wood_10mm_cutting: string;
            wood_engraving: string;
            acrylic_3mm_cutting: string;
            acrylic_5mm_cutting: string;
            acrylic_8mm_cutting: string;
            acrylic_10mm_cutting: string;
            acrylic_engraving: string;
            mdf_3mm_cutting: string;
            mdf_5mm_cutting: string;
            mdf_engraving: string;
            leather_3mm_cutting: string;
            leather_5mm_cutting: string;
            leather_engraving: string;
            denim_1mm_cutting: string;
            fabric_3mm_cutting: string;
            fabric_5mm_cutting: string;
            fabric_engraving: string;
            rubber_bw_engraving: string;
            glass_bw_engraving: string;
            metal_bw_engraving: string;
            steel_engraving_spray_engraving: string;
            stainless_steel_bw_engraving_diode: string;
            gold_engraving: string;
            brass_engraving: string;
            ti_engraving: string;
            stainless_steel_engraving: string;
            aluminum_engraving: string;
            black_acrylic_3mm_cutting: string;
            black_acrylic_5mm_cutting: string;
            black_acrylic_engraving: string;
            abs_engraving: string;
            silver_engraving: string;
            iron_engraving: string;
            fabric_printing: string;
            canvas_printing: string;
            cardstock_printing: string;
            wood_printing: string;
            bamboo_printing: string;
            cork_printing: string;
            flat_stone_printing: string;
            acrylic_printing: string;
            pc_printing: string;
            stainless_steel_printing: string;
            gloss_leather_printing: string;
            glass_printing: string;
            aluminum_light: string;
            stainless_steel_dark: string;
            stainless_steel_light: string;
            brass_dark: string;
            brass_light: string;
            copper: string;
            titanium_dark: string;
            titanium_light: string;
            black_abs: string;
            white_abs: string;
            opaque_acrylic: string;
            stone: string;
          };
        };
        laser_speed: {
          text: string;
          unit: string;
          fast: string;
          slow: string;
          min: number;
          max: number;
          step: number;
        };
        power: {
          text: string;
          high: string;
          low: string;
          min: number;
          max: number;
          step: number;
        };
        ink_type: {
          text: string;
          normal: string;
          UV: string;
        };
        para_in_use: string;
        do_not_adjust_default_para: string;
        existing_name: string;
        presets: string;
        preset_management: {
          preset: string;
          title: string;
          add_new: string;
          lower_focus_by: string;
          save_and_exit: string;
          delete: string;
          reset: string;
          sure_to_reset: string;
          show_all: string;
          laser: string;
          print: string;
          export: string;
          export_preset_title: string;
          import: string;
          sure_to_import_presets: string;
          new_preset_name: string;
        };
      };
      object_panel: {
        zoom: string;
        group: string;
        ungroup: string;
        distribute: string;
        hdist: string;
        vdist: string;
        align: string;
        left_align: string;
        center_align: string;
        right_align: string;
        top_align: string;
        middle_align: string;
        bottom_align: string;
        boolean: string;
        union: string;
        subtract: string;
        intersect: string;
        difference: string;
        flip: string;
        hflip: string;
        vflip: string;
        lock_aspect: string;
        unlock_aspect: string;
        option_panel: {
          fill: string;
          rounded_corner: string;
          sides: string;
          font_family: string;
          font_style: string;
          font_size: string;
          letter_spacing: string;
          line_spacing: string;
          vertical_text: string;
          start_offset: string;
          vertical_align: string;
          text_infill: string;
          path_infill: string;
          shading: string;
          pwm_engraving: string;
          pwm_engraving_link: string;
          threshold: string;
          threshold_short: string;
          stroke: string;
          stroke_color: string;
          stroke_width: string;
          color: string;
        };
        actions_panel: {
          replace_with: string;
          replace_with_short: string;
          trace: string;
          grading: string;
          brightness: string;
          sharpen: string;
          crop: string;
          bevel: string;
          invert: string;
          weld_text: string;
          convert_to_path: string;
          fetching_web_font: string;
          uploading_font_to_machine: string;
          wait_for_parsing_font: string;
          offset: string;
          array: string;
          auto_fit: string;
          smart_nest: string;
          decompose_path: string;
          disassemble_use: string;
          disassembling: string;
          ungrouping: string;
          create_textpath: string;
          create_textpath_short: string;
          detach_path: string;
          detach_path_short: string;
          edit_path: string;
          simplify: string;
          ai_bg_removal: string;
          ai_bg_removal_short: string;
          ai_bg_removal_reminder: string;
          outline: string;
        };
        path_edit_panel: {
          node_type: string;
          sharp: string;
          round: string;
          connect: string;
          disconnect: string;
          delete: string;
        };
      };
    };
    bottom_right_panel: {
      convert_text_to_path_before_export: string;
      retreive_image_data: string;
      export_file_error_ask_for_upload: string;
    };
    image_trace_panel: {
      back: string;
      cancel: string;
      next: string;
      brightness: string;
      contrast: string;
      threshold: string;
      okay: string;
      tuning: string;
    };
    photo_edit_panel: {
      cancel: string;
      sharpen: string;
      sharpness: string;
      radius: string;
      crop: string;
      aspect_ratio: string;
      original: string;
      free: string;
      curve: string;
      start: string;
      processing: string;
      invert: string;
      okay: string;
      compare: string;
      phote_edit: string;
      brightness_and_contrast: string;
      brightness: string;
      contrast: string;
      rotary_warped: string;
      rotary_warped_link: string;
      diameter: string;
      circumference: string;
      warp: string;
    };
    document_panel: {
      document_settings: string;
      machine: string;
      laser_source: string;
      workarea: string;
      rotary_mode: string;
      borderless_mode: string;
      engrave_dpi: string;
      enable_diode: string;
      enable_autofocus: string;
      extend_workarea: string;
      mirror: string;
      pass_through: string;
      pass_through_height_desc: string;
      start_position: string;
      start_from: string;
      origin: string;
      current_position: string;
      job_origin: string;
      add_on: string;
      low: string;
      medium: string;
      high: string;
      ultra: string;
      enable: string;
      disable: string;
      notification: {
        changeFromPrintingWorkareaTitle: string;
      };
      start_work_button: string;
      frame_before_start: string;
      frame_before_start_url: string;
    };
    object_panels: {
      wait_for_parsing_font: string;
      text_to_path: {
        font_substitute_pop: string;
        check_thumbnail_warning: string;
        error_when_parsing_text: string;
        retry: string;
        use_current_font: string;
      };
      lock_desc: string;
    };
    tool_panels: {
      cancel: string;
      confirm: string;
      grid_array: string;
      array_dimension: string;
      rows: string;
      columns: string;
      array_interval: string;
      dx: string;
      dy: string;
      offset: string;
      nest: string;
      _offset: {
        direction: string;
        inward: string;
        outward: string;
        dist: string;
        corner_type: string;
        sharp: string;
        round: string;
        fail_message: string;
        not_support_message: string;
      };
      _nest: {
        start_nest: string;
        stop_nest: string;
        end: string;
        spacing: string;
        rotations: string;
        no_element: string;
      };
    };
    network_testing_panel: {
      network_testing: string;
      local_ip: string;
      insert_ip: string;
      empty_ip: string;
      start: string;
      end: string;
      testing: string;
      invalid_ip: string;
      ip_startswith_169: string;
      connection_quality: string;
      average_response: string;
      test_completed: string;
      test_fail: string;
      cannot_connect_1: string;
      cannot_connect_2: string;
      network_unhealthy: string;
      device_not_on_list: string;
      hint_device_often_on_list: string;
      link_device_often_on_list: string;
      hint_connect_failed_when_sending_job: string;
      link_connect_failed_when_sending_job: string;
      hint_connect_camera_timeout: string;
      link_connect_camera_timeout: string;
      cannot_get_local: string;
      fail_to_start_network_test: string;
      linux_permission_hint: string;
    };
    layer_color_config_panel: {
      layer_color_config: string;
      color: string;
      power: string;
      speed: string;
      repeat: string;
      add: string;
      default: string;
      add_config: string;
      in_use: string;
      no_input: string;
      sure_to_reset: string;
      sure_to_delete: string;
    };
    rating_panel: {
      title: string;
      description: string;
      dont_show_again: string;
      thank_you: string;
    };
    svg_editor: {
      unnsupported_file_type: string;
      unable_to_fetch_clipboard_img: string;
    };
    units: {
      walt: string;
      mm: string;
    };
    path_preview: {
      play: string;
      pause: string;
      stop: string;
      play_speed: string;
      travel_path: string;
      invert: string;
      preview_info: string;
      size: string;
      estimated_time: string;
      cut_time: string;
      rapid_time: string;
      cut_distance: string;
      rapid_distance: string;
      current_position: string;
      remark: string;
      start_here: string;
      end_preview: string;
    };
    shapes_panel: {
      title: string;
      basic: string;
      shape: string;
      graphics: string;
      arrow: string;
      label: string;
      decor: string;
      circular: string;
      corner: string;
      line: string;
      photo: string;
      ribbon: string;
      speech: string;
      text: string;
      animals: string;
      birds: string;
      land: string;
      sea: string;
      holidays: string;
      celebration: string;
      CNY: string;
      easter: string;
      halloween: string;
      valentines: string;
      Xmas: string;
      nature: string;
      elements: string;
      environment: string;
      plants: string;
      weather: string;
    };
    announcement_panel: {
      title: string;
      dont_show_again: string;
    };
  };
  editor: {
    prespray_area: string;
    opacity: string;
    exposure: string;
  };
  flux_id_login: {
    connection_fail: string;
    login_success: string;
    login: string;
    unlock_shape_library: string;
    email: string;
    password: string;
    remember_me: string;
    forget_password: string;
    register: string;
    offline: string;
    work_offline: string;
    incorrect: string;
    not_verified: string;
    new_to_flux: string;
    signup_url: string;
    lost_password_url: string;
    flux_plus: {
      explore_plans: string;
      thank_you: string;
      ai_credit_tooltip: string;
      flux_credit_tooltip: string;
      goto_member_center: string;
      access_plus_feature_1: string;
      access_plus_feature_2: string;
      access_plus_feature_note: string;
      access_monotype_feature: string;
      access_monotype_feature_note: string;
      learn_more: string;
      get_addon: string;
      subscribe_now: string;
      website_url: string;
      member_center_url: string;
      features: {
        ai_bg_removal: string;
        my_cloud: string;
        boxgen: string;
        dmkt: string;
        monotype: string;
      };
    };
  };
  noun_project_panel: {
    login_first: string;
    enjoy_shape_library: string;
    shapes: string;
    elements: string;
    recent: string;
    search: string;
    clear: string;
    export_svg_title: string;
    export_svg_warning: string;
    learn_more: string;
  };
  change_logs: {
    change_log: string;
    added: string;
    fixed: string;
    changed: string;
    see_older_version: string;
    help_center_url: string;
  };
  select_device: {
    select_device: string;
    auth_failure: string;
    unable_to_connect: string;
  };
  device: {
    pause: string;
    paused: string;
    pausing: string;
    select_printer: string;
    retry: string;
    status: string;
    busy: string;
    ready: string;
    reset: string;
    abort: string;
    start: string;
    please_wait: string;
    quit: string;
    completing: string;
    aborted: string;
    completed: string;
    aborting: string;
    starting: string;
    preparing: string;
    resuming: string;
    scanning: string;
    occupied: string;
    running: string;
    uploading: string;
    processing: string;
    disconnectedError: {
      caption: string;
      message: string;
    };
    unknown: string;
    pausedFromError: string;
    model_name: string;
    IP: string;
    serial_number: string;
    firmware_version: string;
    UUID: string;
    select: string;
    deviceList: string;
    disable: string;
    enable: string;
    submodule_type: string;
    cartridge_serial_number: string;
    ink_color: string;
    ink_type: string;
    ink_level: string;
    close_door_to_read_cartridge_info: string;
    cartridge_info_read_failed: string;
    cartridge_info_verification_failed: string;
    toolhead_change: string;
  };
  monitor: {
    monitor: string;
    go: string;
    resume: string;
    start: string;
    pause: string;
    stop: string;
    record: string;
    camera: string;
    taskTab: string;
    connecting: string;
    HARDWARE_ERROR_MAINBOARD_ERROR: string;
    HARDWARE_ERROR_SUBSYSTEM_ERROR: string;
    HARDWARE_ERROR_PUMP_ERROR: string;
    HARDWARE_ERROR_DOOR_OPENED: string;
    HARDWARE_ERROR_OVER_TEMPERATURE: string;
    HARDWARE_ERROR_BOTTOM_OPENED: string;
    HARDWARE_ERROR_PLATFORM_HOMING_FAILED: string;
    HARDWARE_ERROR_DRAWER_OPENED: string;
    HARDWARE_ERROR_FIRE_DETECTED: string;
    HARDWARE_ERROR_AIR_ASSIST_ABNORMAL: string;
    HARDWARE_ERROR_ROTARY_NOT_DETECTED: string;
    HARDWARE_ERROR_HOMING_PULLOFF_FAILED: string;
    HARDWARE_ERROR_HEADTYPE_MISMATCH: string;
    HARDWARE_ERROR_HEADTYPE_NONE: string;
    HARDWARE_ERROR_HEADTYPE_UNKNOWN: string;
    HARDWARE_ERROR_PRINTER_NO_RESPONSE: string;
    USER_OPERATION_ROTARY_PAUSE: string;
    USER_OPERATION_REMOVE_CARTRIDGE: string;
    USER_OPERATION_CHANGE_TOOLHEAD_HEADTYPE_NONE: string;
    USER_OPERATION_CHANGE_TOOLHEAD_HEADTYPE_UNKNOWN: string;
    USER_OPERATION_CHANGE_TOOLHEAD_HEADTYPE_MISMATCH: string;
    USER_OPERATION_CHANGE_TOOLHEAD: string;
    USER_OPERATION_CHANGE_CARTRIDGE_CARTRIDGE_NOT_DETECTED: string;
    USER_OPERATION_CHANGE_CARTRIDGE: string;
    USER_OPERATION: string;
    RESOURCE_BUSY: string;
    DEVICE_ERROR: string;
    NO_RESPONSE: string;
    SUBSYSTEM_ERROR: string;
    HARDWARE_FAILURE: string;
    MAINBOARD_OFFLINE: string;
    bug_report: string;
    processing: string;
    savingPreview: string;
    hour: string;
    minute: string;
    second: string;
    left: string;
    temperature: string;
    forceStop: string;
    upload: string;
    download: string;
    relocate: string;
    cancel: string;
    prepareRelocate: string;
    extensionNotSupported: string;
    fileExistContinue: string;
    confirmFileDelete: string;
    ask_reconnect: string;
    task: {
      BEAMBOX: string;
      'N/A': string;
    };
  };
  alert: {
    caption: string;
    duplicated_preset_name: string;
    info: string;
    warning: string;
    error: string;
    instruction: string;
    oops: string;
    retry: string;
    abort: string;
    confirm: string;
    cancel: string;
    close: string;
    ok: string;
    ok2: string;
    yes: string;
    no: string;
    stop: string;
    save: string;
    dont_save: string;
    learn_more: string;
  };
  caption: {
    connectionTimeout: string;
  };
  message: {
    cancelling: string;
    connecting: string;
    connectingMachine: string;
    tryingToConenctMachine: string;
    connected: string;
    authenticating: string;
    enteringRawMode: string;
    endingRawMode: string;
    enteringLineCheckMode: string;
    endingLineCheckMode: string;
    enteringRedLaserMeasureMode: string;
    redLaserTakingReference: string;
    exitingRotaryMode: string;
    turningOffFan: string;
    turningOffAirPump: string;
    gettingLaserSpeed: string;
    settingLaserSpeed: string;
    retrievingCameraOffset: string;
    connectingCamera: string;
    homing: string;
    connectionTimeout: string;
    getProbePosition: string;
    device_not_found: {
      caption: string;
      message: string;
    };
    device_busy: {
      caption: string;
      message: string;
    };
    device_is_used: string;
    unknown_error: string;
    unknown_device: string;
    unsupport_osx_version: string;
    unsupport_win_version: string;
    need_password: string;
    unavailableWorkarea: string;
    please_enter_dpi: string;
    auth_error: string;
    usb_unplugged: string;
    uploading_fcode: string;
    cant_connect_to_device: string;
    unable_to_find_machine: string;
    disconnected: string;
    unable_to_start: string;
    camera: {
      camera_cable_unstable: string;
      fail_to_transmit_image: string;
      ws_closed_unexpectly: string;
      continue_preview: string;
      abort_preview: string;
    };
    preview: {
      camera_preview: string;
      auto_focus: string;
      auto_focus_instruction: string;
      already_performed_auto_focus: string;
      please_enter_height: string;
      enter_manually: string;
      adjust: string;
      adjust_height_tooltip: string;
    };
    unsupported_example_file: string;
    time_remaining: string;
    promark_disconnected: string;
    swiftray_disconnected: string;
    swiftray_reconnected: string;
  };
  machine_status: {
    '-17': string;
    '-10': string;
    '-2': string;
    '-1': string;
    0: string;
    1: string;
    2: string;
    4: string;
    6: string;
    16: string;
    18: string;
    32: string;
    36: string;
    38: string;
    48: string;
    50: string;
    64: string;
    66: string;
    68: string;
    128: string;
    256: string;
    512: string;
    UNKNOWN: string;
  };
  calibration: {
    update_firmware_msg1: string;
    update_firmware_msg2: string;
    camera_calibration: string;
    diode_calibration: string;
    module_calibration_printer: string;
    module_calibration_2w_ir: string;
    back: string;
    next: string;
    skip: string;
    cancel: string;
    finish: string;
    do_engraving: string;
    start_engrave: string;
    start_printing: string;
    ask_for_readjust: string;
    please_goto_beambox_first: string;
    please_place_paper: string;
    please_place_paper_center: string;
    please_place_dark_colored_paper: string;
    please_refocus: {
      beambox: string;
      beamo: string;
      beamo_af: string;
      hexa: string;
    };
    without_af: string;
    with_af: string;
    dx: string;
    dy: string;
    rotation_angle: string;
    x_ratio: string;
    y_ratio: string;
    show_last_config: string;
    use_last_config: string;
    taking_picture: string;
    analyze_result_fail: string;
    drawing_calibration_image: string;
    calibrate_done: string;
    calibrate_done_diode: string;
    hint_red_square: string;
    hint_adjust_parameters: string;
    zendesk_link: string;
    please_do_camera_calibration_and_focus: {
      beambox: string;
      beamo: string;
    };
    downloading_pictures: string;
    failed_to_download_pictures: string;
    uploading_images: string;
    calculating_camera_matrix: string;
    calculating_regression_parameters: string;
    failed_to_calibrate_camera: string;
    failed_to_save_calibration_results: string;
    ador_autofocus_material: string;
    ador_autofocus_focusing_block: string;
    align_red_cross_cut: string;
    align_red_cross_print: string;
    retake: string;
    calibrate_camera_before_calibrate_modules: string;
    check_checkpoint_data: string;
    checking_checkpoint: string;
    use_old_camera_parameter: string;
    found_checkpoint: string;
    downloading_checkpoint: string;
    failed_to_parse_checkpoint: string;
    check_device_pictures: string;
    checking_pictures: string;
    no_picutre_found: string;
    unable_to_load_camera_parameters: string;
    calibrating_with_device_pictures: string;
    failed_to_calibrate_with_pictures: string;
    getting_plane_height: string;
    preparing_to_take_picture: string;
    put_paper: string;
    put_paper_step1: string;
    put_paper_step2: string;
    put_paper_step3: string;
    put_paper_promark_1: string;
    put_paper_promark_2: string;
    put_paper_skip: string;
    solve_pnp_title: string;
    solve_pnp_step1: string;
    solve_pnp_step2: string;
    solve_pnp_step3: string;
    align_olt: string;
    align_ort: string;
    align_olb: string;
    align_orb: string;
    align_ilt: string;
    align_irt: string;
    align_ilb: string;
    align_irb: string;
    elevate_and_cut: string;
    elevate_and_cut_step_1: string;
    elevate_and_cut_step_1_prism_lift: string;
    with_prism_lift: string;
    without_prism_lift: string;
    camera_parameter_saved_successfully: string;
    failed_to_save_camera_parameter: string;
    failed_to_solve_pnp: string;
    calibrating: string;
    moving_laser_head: string;
    failed_to_move_laser_head: string;
    put_chessboard: string;
    put_chessboard_bb2_desc_1: string;
    put_chessboard_bb2_desc_2: string;
    put_chessboard_bb2_desc_3: string;
    put_chessboard_1: string;
    put_chessboard_2: string;
    put_chessboard_3: string;
    put_chessboard_promark_desc_1: string;
    put_chessboard_promark_desc_2: string;
    put_chessboard_promark_1: string;
    put_chessboard_promark_2: string;
    download_chessboard_file: string;
    failed_to_calibrate_chessboard: string;
    calibrate_chessboard_success_msg: string;
    res_excellent: string;
    res_average: string;
    res_poor: string;
    perform_autofocus_bb2: string;
    promark_help_link: string;
  };
  input_machine_password: {
    require_password: string;
    connect: string;
    password: string;
  };
  tutorial: {
    skip: string;
    welcome: string;
    suggest_calibrate_camera_first: string;
    camera_calibration_failed: string;
    ask_retry_calibration: string;
    needNewUserTutorial: string;
    needNewInterfaceTutorial: string;
    next: string;
    look_for_machine: string;
    unable_to_find_machine: string;
    skip_tutorial: string;
    set_connection: string;
    retry: string;
    newUser: {
      draw_a_circle: string;
      drag_to_draw: string;
      infill: string;
      switch_to_object_panel: string;
      switch_to_layer_panel: string;
      set_preset_wood_engraving: string;
      set_preset_wood_cut: string;
      add_new_layer: string;
      draw_a_rect: string;
      switch_to_preview_mode: string;
      preview_the_platform: string;
      end_preview_mode: string;
      put_wood: string;
      adjust_focus: string;
      close_cover: string;
      send_the_file: string;
      end_alert: string;
      please_select_wood_engraving: string;
      please_select_wood_cutting: string;
    };
    newInterface: {
      camera_preview: string;
      select_image_text: string;
      basic_shapes: string;
      pen_tool: string;
      add_new_layer: string;
      rename_by_double_click: string;
      drag_to_sort: string;
      layer_controls: string;
      switch_between_layer_panel_and_object_panel: string;
      align_controls: string;
      group_controls: string;
      shape_operation: string;
      flip: string;
      object_actions: string;
      end_alert: string;
      select_machine: string;
      start_work: string;
    };
    gesture: {
      pan: string;
      zoom: string;
      click: string;
      drag: string;
      hold: string;
    };
    links: {
      adjust_focus: string;
    };
    tutorial_complete: string;
  };
  layer_module: {
    none: string;
    general_laser: string;
    laser_10w_diode: string;
    laser_20w_diode: string;
    laser_2w_infrared: string;
    printing: string;
    unknown: string;
    notification: {
      convertFromPrintingModuleTitle: string;
      convertFromPrintingModuleMsg: string;
      convertFromLaserModuleTitle: string;
      convertFromLaserModuleMsg: string;
      importedDocumentContainsPrinting: string;
      printingLayersCoverted: string;
      performPrintingCaliTitle: string;
      performPrintingCaliMsg: string;
      performIRCaliTitle: string;
      performIRCaliMsg: string;
    };
    non_working_area: string;
  };
  qr_code_generator: {
    title: string;
    placeholder: string;
    preview: string;
    error_tolerance: string;
    error_tolerance_link: string;
    invert: string;
  };
  boxgen: {
    title: string;
    basic_box: string;
    coming_soon: string;
    workarea: string;
    max_dimension_tooltip: string;
    volume: string;
    outer: string;
    inner: string;
    width: string;
    height: string;
    depth: string;
    cover: string;
    thickness: string;
    add_option: string;
    joints: string;
    finger: string;
    finger_warning: string;
    tSlot: string;
    tSlot_warning: string;
    edge: string;
    tCount: string;
    tCount_tooltip: string;
    tDiameter: string;
    tLength: string;
    continue_import: string;
    customize: string;
    merge: string;
    text_label: string;
    beam_radius: string;
    beam_radius_warning: string;
    import: string;
    cancel: string;
    reset: string;
    zoom: string;
    control_tooltip: string;
    control_tooltip_touch: string;
  };
  my_cloud: {
    title: string;
    loading_file: string;
    no_file_title: string;
    no_file_subtitle: string;
    file_limit: string;
    upgrade: string;
    sort: {
      most_recent: string;
      oldest: string;
      a_to_z: string;
      z_to_a: string;
    };
    action: {
      open: string;
      rename: string;
      duplicate: string;
      download: string;
      delete: string;
      confirmFileDelete: string;
    };
    save_file: {
      choose_action: string;
      save: string;
      save_new: string;
      input_file_name: string;
      invalid_char: string;
      storage_limit_exceeded: string;
    };
  };
  camera_data_backup: {
    title: string;
    no_picture_found: string;
    folder_not_exists: string;
    incorrect_folder: string;
    downloading_data: string;
    estimated_time_left: string;
    uploading_data: string;
    download_success: string;
    upload_success: string;
  };
  insecure_websocket: {
    extension_detected: string;
    extension_detected_description: string;
    extension_not_deteced: string;
    extension_not_deteced_description: string;
    unsecure_url_help_center_link: string;
  };
  curve_engraving: {
    measure_audofocus_area: string;
    amount: string;
    gap: string;
    rows: string;
    coloumns: string;
    row_gap: string;
    column_gap: string;
    set_object_height: string;
    set_object_height_desc: string;
    reselect_area: string;
    start_autofocus: string;
    starting_measurement: string;
    preview_3d_curve: string;
    apply_arkwork: string;
    apply_camera: string;
    click_to_select_point: string;
    remeasure: string;
    remeasuring_points: string;
    take_reference: string;
    take_reference_desc: string;
    sure_to_delete: string;
    help_center_url: string;
  };
  pass_through: {
    title: string;
    help_text: string;
    help_links: {
      ado1: string;
      // TODO: hide fbb2 link the article is until ready
      // fbb2: string;
    };
    object_length: string;
    workarea_height: string;
    height_desc: string;
    ref_layer: string;
    ref_layer_desc: string;
    ref_layer_name: string;
    guide_mark: string;
    guide_mark_length: string;
    guide_mark_x: string;
    guide_mark_desc: string;
    export: string;
    exporting: string;
  };
  auto_fit: {
    title: string;
    step1: string;
    step2: string;
    step3: string;
    preview_first: string;
    failed_to_find_contour: string;
    error_tip1: string;
    error_tip2: string;
    learn_more: string;
    learn_more_url: string;
    selected_artwork: string;
    select_a_pattern: string;
    position_artwork: string;
    position_step1: string;
    position_step2: string;
    offset_x: string;
    offset_y: string;
    rotation: string;
    reset_position: string;
    artwork_size: string;
    pattern_size: string;
  };
  rotary_settings: {
    type: string;
    // roller: string;
    // chuck: string;
    object_diameter: string;
    circumference: string;
  };
  framing: {
    low_laser: string;
    low_laser_desc: string;
    framing: string;
    hull: string;
    area_check: string;
    framing_desc: string;
    hull_desc: string;
    areacheck_desc: string;
    calculating_task: string;
    start_task: string;
    start_task_description: string;
  };
  material_test_generator: Record<
    | 'title'
    | 'table_settings'
    | 'block_settings'
    | 'text_settings'
    | 'preview'
    | 'export'
    | 'cut'
    | 'engrave'
    | 'columns'
    | 'rows'
    // table setting form
    | 'parameter'
    | 'min'
    | 'max'
    // block setting form
    | 'count'
    | 'size'
    | 'spacing',
    string
  >;
  web_cam: {
    no_permission: string;
    no_device: string;
  };
  promark_settings: {
    title: string;
    field: string;
    red_dot: string;
    galvo_configuration: string;
    switchXY: string;
    workarea_hint: string;
    offsetX: string;
    offsetY: string;
    angle: string;
    scaleX: string;
    scaleY: string;
    scale: string;
    bulge: string;
    skew: string;
    trapezoid: string;
    mark_parameters: string;
    preview: string;
    mark: string;
    z_axis_adjustment: {
      title: string;
      section1: string;
      tooltip1: string;
    };
  };
  code_generator: {
    qr_code: string;
    barcode: string;
  };
  barcode_generator: {
    bar_width: string;
    bar_height: string;
    text_margin: string;
    invert_color: string;
    font: string;
    font_size: string;
    hide_text: string;
    barcode: {
      invalid_value: string;
    };
  };
  social_media: {
    instagram: string;
    facebook: string;
    youtube: string;
  };
  image_edit_panel: {
    title: string;
    eraser: {
      title: string;
      description: string;
      brush_size: string;
    };
    magic_wand: {
      title: string;
      description: string;
      tolerance: string;
    };
  };
}
